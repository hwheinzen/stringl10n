// Copyright 2015 Itts Mee. All rights reserved.
// Use of this source code is governed by a license
// that can be found in the LICENSE file.

// THIS FILE HAS BEEN GENERATED BY stringl10n.
// DO NOT EDIT.
// CHANGES WILL BE LOST AFTER NEXT //go:generate stringl10n ...

package main

import (
	"testing"
)

type InT struct {
	key string
	lang string
}
type tTest struct {
	in  InT
	out string
}

var tTests = []tTest{ 
	{
		in: InT{key: "1: {{printf \"%d\" .I1}} 2: {{printf \"%f\" .Fl1}}", lang: "en"},
		out: "One: {{printf \"%d\" .I1}} Two: {{trimr (printf \"%f\" .Fl1) \"0\"}}",
	},
	{
		in: InT{key: "1: {{printf \"%d\" .I1}} 2: {{printf \"%f\" .Fl1}}", lang: "de"},
		out: "Zwei: {{trimr (replace (printf \"%f\" .Fl1) \".\" \",\" -1) \"0\"}} Eins: {{printf \"%d\" .I1}}",
	},
	{
		in: InT{key: "1: {{printf \"%d\" .I1}} 2: {{printf \"%f\" .Fl1}}", lang: "ex"},
		out: "Struktur: {{print .S1}}",
	},
	{
		in: InT{key: "address of the data server is missing", lang: "de"},
		out: "Adresse des Daten-Servers fehlt",
	},
	{
		in: InT{key: "address of the data server is missing", lang: "en"},
		out: "address of the data server is missing",
	},
	{
		in: InT{key: "help", lang: "de"},
		out: "Hilfe",
	},
	{
		in: InT{key: "help", lang: "en"},
		out: "help",
	},
}

// TestT runs tests for function t.
func TestT(test *testing.T) {
	for _, v := range tTests {
		temp := t(v.in.key, v.in.lang)
		if temp != v.out {
			test.Error("Key:"+v.in.key+" Lang:"+v.in.lang+"\nexpected:"+v.out+"\ngot:     "+temp)
		}
	}
}
