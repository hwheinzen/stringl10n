// Copyright 2015 Itts Mee. All rights reserved.
// Use of this source code is governed by a license
// that can be found in the LICENSE file.

// THIS FILE HAS BEEN GENERATED BY stringl10n.
// DO NOT EDIT.
// CHANGES WILL BE LOST AFTER NEXT //go:generate stringl10n ...

/*
 stringl10n_generated.go contains all localized strings
 and a translation function.
*/

package example

import (
	"encoding/json"
	"log"
)

// Type L10nPair is used during string localization.
type L10nPair struct {
	Lang  string
	Value string
}

// L10nMap contains all key strings and all translations.
var L10nMap = make(map[string][]L10nPair, 10)

// t returns a localized text for a given variable
// according to the chosen locale language code.
func t(key, lang string) (value string) {
	pairs, ok := L10nMap[key]
	if !ok {
		log.Print("No entry for: " + key)
		return key
	}
	for _, v := range pairs {
		if v.Lang == lang {
			return v.Value
		}
	}
	log.Print("No entry for (key/lang): " + key + "/" + lang)
	return key
}

func init() {
	err := json.Unmarshal([]byte(tmpL10nJSON), &L10nMap)
	if err != nil {
		log.Fatal(err)
	}
	tmpL10nJSON = "" // no longer needed
}

var tmpL10nJSON = `{":TCP port (optional)":[{"Lang":"de","Value":":Port dieses TCP-Servers"},{"Lang":"en","Value":":TCP port (optional)"}],"[address]:port of the data server":[{"Lang":"de","Value":"[Adresse]:Port des Datenservers"},{"Lang":"en","Value":"[address]:port of the data server"}],"address of the data server is missing":[{"Lang":"de","Value":"Adresse des Daten-Servers fehlt"},{"Lang":"en","Value":"address of the data server is missing"}],"config file name":[{"Lang":"de","Value":"Konfig-Dateiname (MUSS)"},{"Lang":"en","Value":"config file name"}],"help":[{"Lang":"de","Value":"Hilfe"},{"Lang":"en","Value":"help"}],"listening port is missing":[{"Lang":"de","Value":"TCP-Port dieses Servers fehlt"},{"Lang":"en","Value":"listening port is missing"}]}`
