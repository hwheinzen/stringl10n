// Copyright 2015 Itts Mee. All rights reserved.
// Use of this source code is governed by a license
// that can be found in the LICENSE file.

// THIS FILE HAS BEEN GENERATED BY stringl10n.
// DO NOT EDIT.
// CHANGES WILL BE LOST AFTER NEXT //go:generate stringl10n ...

/*
 stringl10n_generated.go contains all localized Strings and a set method.
*/

package example

import (
	"testing"
)

type InT struct {
	key string
	lang string
}
type tTest struct {
	in  InT
	out string
}

var tTests = []tTest{ 
	{
		in: InT{key: ":TCP port (optional)", lang: "de"},
		out: ":Port dieses TCP-Servers",
	},
	{
		in: InT{key: ":TCP port (optional)", lang: "en"},
		out: ":TCP port (optional)",
	},
	{
		in: InT{key: "[address]:port of the data server", lang: "de"},
		out: "[Adresse]:Port des Datenservers",
	},
	{
		in: InT{key: "[address]:port of the data server", lang: "en"},
		out: "[address]:port of the data server",
	},
	{
		in: InT{key: "address of the data server is missing", lang: "de"},
		out: "Adresse des Daten-Servers fehlt",
	},
	{
		in: InT{key: "address of the data server is missing", lang: "en"},
		out: "address of the data server is missing",
	},
	{
		in: InT{key: "config file name", lang: "de"},
		out: "Konfig-Dateiname (MUSS)",
	},
	{
		in: InT{key: "config file name", lang: "en"},
		out: "config file name",
	},
	{
		in: InT{key: "help", lang: "de"},
		out: "Hilfe",
	},
	{
		in: InT{key: "help", lang: "en"},
		out: "help",
	},
	{
		in: InT{key: "listening port is missing", lang: "de"},
		out: "TCP-Port dieses Servers fehlt",
	},
	{
		in: InT{key: "listening port is missing", lang: "en"},
		out: "listening port is missing",
	},
}

func TestT(test *testing.T) {
	for _, v := range tTests {
		temp := t(v.in.key, v.in.lang)
		if temp != v.out {
			test.Error("Key:"+v.in.key+" Lang:"+v.in.lang+"\nexpected:"+v.out+"\ngot:     "+temp)
		}
	}
}
